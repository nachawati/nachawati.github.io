"use strict";(self.webpackChunknachawati_github_io=self.webpackChunknachawati_github_io||[]).push([[4695],{3905:(e,t,n)=>{n.d(t,{Zo:()=>c,kt:()=>g});var r=n(7294);function i(e,t,n){return t in e?Object.defineProperty(e,t,{value:n,enumerable:!0,configurable:!0,writable:!0}):e[t]=n,e}function o(e,t){var n=Object.keys(e);if(Object.getOwnPropertySymbols){var r=Object.getOwnPropertySymbols(e);t&&(r=r.filter((function(t){return Object.getOwnPropertyDescriptor(e,t).enumerable}))),n.push.apply(n,r)}return n}function a(e){for(var t=1;t<arguments.length;t++){var n=null!=arguments[t]?arguments[t]:{};t%2?o(Object(n),!0).forEach((function(t){i(e,t,n[t])})):Object.getOwnPropertyDescriptors?Object.defineProperties(e,Object.getOwnPropertyDescriptors(n)):o(Object(n)).forEach((function(t){Object.defineProperty(e,t,Object.getOwnPropertyDescriptor(n,t))}))}return e}function l(e,t){if(null==e)return{};var n,r,i=function(e,t){if(null==e)return{};var n,r,i={},o=Object.keys(e);for(r=0;r<o.length;r++)n=o[r],t.indexOf(n)>=0||(i[n]=e[n]);return i}(e,t);if(Object.getOwnPropertySymbols){var o=Object.getOwnPropertySymbols(e);for(r=0;r<o.length;r++)n=o[r],t.indexOf(n)>=0||Object.prototype.propertyIsEnumerable.call(e,n)&&(i[n]=e[n])}return i}var s=r.createContext({}),u=function(e){var t=r.useContext(s),n=t;return e&&(n="function"==typeof e?e(t):a(a({},t),e)),n},c=function(e){var t=u(e.components);return r.createElement(s.Provider,{value:t},e.children)},p="mdxType",d={inlineCode:"code",wrapper:function(e){var t=e.children;return r.createElement(r.Fragment,{},t)}},m=r.forwardRef((function(e,t){var n=e.components,i=e.mdxType,o=e.originalType,s=e.parentName,c=l(e,["components","mdxType","originalType","parentName"]),p=u(n),m=i,g=p["".concat(s,".").concat(m)]||p[m]||d[m]||o;return n?r.createElement(g,a(a({ref:t},c),{},{components:n})):r.createElement(g,a({ref:t},c))}));function g(e,t){var n=arguments,i=t&&t.mdxType;if("string"==typeof e||i){var o=n.length,a=new Array(o);a[0]=m;var l={};for(var s in t)hasOwnProperty.call(t,s)&&(l[s]=t[s]);l.originalType=e,l[p]="string"==typeof e?e:i,a[1]=l;for(var u=2;u<o;u++)a[u]=n[u];return r.createElement.apply(null,a)}return r.createElement.apply(null,n)}m.displayName="MDXCreateElement"},2280:(e,t,n)=>{n.r(t),n.d(t,{assets:()=>s,contentTitle:()=>a,default:()=>d,frontMatter:()=>o,metadata:()=>l,toc:()=>u});var r=n(7462),i=(n(7294),n(3905));const o={sidebar_position:5,image:"/img/cube-1873956_640.png"},a="5 - Run Local Query (Single File)",l={unversionedId:"getting-started-with-unity-dgms/run-local-query-single-file",id:"getting-started-with-unity-dgms/run-local-query-single-file",title:"5 - Run Local Query (Single File)",description:"Assuming your current working directory is set to /home//workspace, run the following command:",source:"@site/docs/getting-started-with-unity-dgms/5-run-local-query-single-file.md",sourceDirName:"getting-started-with-unity-dgms",slug:"/getting-started-with-unity-dgms/run-local-query-single-file",permalink:"/docs/getting-started-with-unity-dgms/run-local-query-single-file",draft:!1,tags:[],version:"current",sidebarPosition:5,frontMatter:{sidebar_position:5,image:"/img/cube-1873956_640.png"},sidebar:"tutorialsSidebar",previous:{title:"4 - Test Installation",permalink:"/docs/getting-started-with-unity-dgms/test-installation"},next:{title:"6 - Run Local Query (Multiple File)",permalink:"/docs/getting-started-with-unity-dgms/run-local-query-multiple-file"}},s={},u=[],c={toc:u},p="wrapper";function d(e){let{components:t,...n}=e;return(0,i.kt)(p,(0,r.Z)({},c,n,{components:t,mdxType:"MDXLayout"}),(0,i.kt)("h1",{id:"5---run-local-query-single-file"},"5 - Run Local Query (Single File)"),(0,i.kt)("p",null,"Assuming your current working directory is set to ",(0,i.kt)("inlineCode",{parentName:"p"},"/home/<username>/workspace"),", run the following command:"),(0,i.kt)("pre",null,(0,i.kt)("code",{parentName:"pre",className:"language-bash"},"unity run example.jq -o out.json >> stdout.txt\n")),(0,i.kt)("admonition",{title:"Note",type:"info"},(0,i.kt)("p",{parentName:"admonition"},"The -o flag is used to specify the file where the results are saved, the standard output redirection is needed to hide a segmentation fault message that might appear (does not appear to affect the optimization results).")),(0,i.kt)("p",null,"Listing of ",(0,i.kt)("inlineCode",{parentName:"p"},"/home/<username>/workspace/example.jq"),":"),(0,i.kt)("pre",null,(0,i.kt)("code",{parentName:"pre",className:"language-jsoniq"},'jsoniq version "1.0";\n\nimport module namespace a = "http://dgms.io/modules/analytics";\n\ndeclare function local:f($input)\n{\n    let $x := $input.x\n    let $y := $input.y\n    \n    return {\n        cost: 10 * $x + 15 * $y,\n        constraints:\n            $x div 40 + $y div 30 le 40 and\n            $x ge 0 and $x le 1000 and\n            $y ge 0 and $y le 860\n    }\n};\n\nlet $input := {\n    x: {"float?": null},\n    y: {"float?": null}\n}\n\nreturn a:maximize({\n    model: local:f#1,\n    input: $input,\n    objective: "cost",\n    options: {\n        solver: "minos"\n    }\n})\n\n')))}d.isMDXComponent=!0}}]);