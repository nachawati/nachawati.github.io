"use strict";(self.webpackChunknachawati_github_io=self.webpackChunknachawati_github_io||[]).push([[5004],{3905:(t,e,n)=>{n.d(e,{Zo:()=>d,kt:()=>u});var r=n(7294);function o(t,e,n){return e in t?Object.defineProperty(t,e,{value:n,enumerable:!0,configurable:!0,writable:!0}):t[e]=n,t}function i(t,e){var n=Object.keys(t);if(Object.getOwnPropertySymbols){var r=Object.getOwnPropertySymbols(t);e&&(r=r.filter((function(e){return Object.getOwnPropertyDescriptor(t,e).enumerable}))),n.push.apply(n,r)}return n}function a(t){for(var e=1;e<arguments.length;e++){var n=null!=arguments[e]?arguments[e]:{};e%2?i(Object(n),!0).forEach((function(e){o(t,e,n[e])})):Object.getOwnPropertyDescriptors?Object.defineProperties(t,Object.getOwnPropertyDescriptors(n)):i(Object(n)).forEach((function(e){Object.defineProperty(t,e,Object.getOwnPropertyDescriptor(n,e))}))}return t}function s(t,e){if(null==t)return{};var n,r,o=function(t,e){if(null==t)return{};var n,r,o={},i=Object.keys(t);for(r=0;r<i.length;r++)n=i[r],e.indexOf(n)>=0||(o[n]=t[n]);return o}(t,e);if(Object.getOwnPropertySymbols){var i=Object.getOwnPropertySymbols(t);for(r=0;r<i.length;r++)n=i[r],e.indexOf(n)>=0||Object.prototype.propertyIsEnumerable.call(t,n)&&(o[n]=t[n])}return o}var l=r.createContext({}),c=function(t){var e=r.useContext(l),n=e;return t&&(n="function"==typeof t?t(e):a(a({},e),t)),n},d=function(t){var e=c(t.components);return r.createElement(l.Provider,{value:e},t.children)},T="mdxType",p={inlineCode:"code",wrapper:function(t){var e=t.children;return r.createElement(r.Fragment,{},e)}},S=r.forwardRef((function(t,e){var n=t.components,o=t.mdxType,i=t.originalType,l=t.parentName,d=s(t,["components","mdxType","originalType","parentName"]),T=c(n),S=o,u=T["".concat(l,".").concat(S)]||T[S]||p[S]||i;return n?r.createElement(u,a(a({ref:e},d),{},{components:n})):r.createElement(u,a({ref:e},d))}));function u(t,e){var n=arguments,o=e&&e.mdxType;if("string"==typeof t||o){var i=n.length,a=new Array(i);a[0]=S;var s={};for(var l in e)hasOwnProperty.call(e,l)&&(s[l]=e[l]);s.originalType=t,s[T]="string"==typeof t?t:o,a[1]=s;for(var c=2;c<i;c++)a[c]=n[c];return r.createElement.apply(null,a)}return r.createElement.apply(null,n)}S.displayName="MDXCreateElement"},9307:(t,e,n)=>{n.r(e),n.d(e,{assets:()=>l,contentTitle:()=>a,default:()=>p,frontMatter:()=>i,metadata:()=>s,toc:()=>c});var r=n(7462),o=(n(7294),n(3905));const i={sidebar_position:3,image:"/img/cube-1873956_640.png"},a="3 - Add Unity DGMS Shell Script to PATH",s={unversionedId:"getting-started-with-unity-dgms/add-unity-dgms-shell-script-to-path",id:"getting-started-with-unity-dgms/add-unity-dgms-shell-script-to-path",title:"3 - Add Unity DGMS Shell Script to PATH",description:"For Unix-based Systems",source:"@site/docs/getting-started-with-unity-dgms/3-add-unity-dgms-shell-script-to-path.md",sourceDirName:"getting-started-with-unity-dgms",slug:"/getting-started-with-unity-dgms/add-unity-dgms-shell-script-to-path",permalink:"/docs/getting-started-with-unity-dgms/add-unity-dgms-shell-script-to-path",draft:!1,tags:[],version:"current",sidebarPosition:3,frontMatter:{sidebar_position:3,image:"/img/cube-1873956_640.png"},sidebar:"tutorialsSidebar",previous:{title:"2 - Pull Unity DGMS Docker Image",permalink:"/docs/getting-started-with-unity-dgms/pull-unity-dgms-docker-image"},next:{title:"4 - Test Installation",permalink:"/docs/getting-started-with-unity-dgms/test-installation"}},l={},c=[{value:"For Unix-based Systems",id:"for-unix-based-systems",level:2},{value:"For Windows with Docker Toolbox",id:"for-windows-with-docker-toolbox",level:2},{value:"For Windows with Docker for Windows",id:"for-windows-with-docker-for-windows",level:2}],d={toc:c},T="wrapper";function p(t){let{components:e,...n}=t;return(0,o.kt)(T,(0,r.Z)({},d,n,{components:e,mdxType:"MDXLayout"}),(0,o.kt)("h1",{id:"3---add-unity-dgms-shell-script-to-path"},"3 - Add Unity DGMS Shell Script to PATH"),(0,o.kt)("h2",{id:"for-unix-based-systems"},"For Unix-based Systems"),(0,o.kt)("ol",null,(0,o.kt)("li",{parentName:"ol"},"Save the following script to ",(0,o.kt)("inlineCode",{parentName:"li"},"/usr/local/bin/unity"))),(0,o.kt)("pre",null,(0,o.kt)("code",{parentName:"pre",className:"language-bash"},'#!/usr/bin/env bash\n\nSETTINGS="${UNITY_SETTINGS:-$(eval "cd ~${SUDO_USER:-$USER}; pwd")/.unity}"\nWORKSPACE="${UNITY_WORKSPACE:-$(pwd)}"\n\nARGS="-v \\"$SETTINGS:/root/.unity\\" -v \\"$WORKSPACE:/root/workspace\\""\n\nif [[ ! -z "${UNITY_PACKAGES}" ]]; then\n  ARGS="$ARGS -v \\"$(eval "cd ${UNITY_PACKAGES}; pwd"):/root/packages\\""\nfi\n\nif [[ ! -z "${UNITY_BINPATH}" ]]; then\n  ARGS="$ARGS -v \\"$(eval "cd ${UNITY_BINPATH}; pwd"):/root/bin\\""\nfi\n\nif [[ ! -z "${UNITY_LIBPATH}" ]]; then\n  ARGS="$ARGS -v \\"$(eval "cd ${UNITY_LIBPATH}; pwd"):/root/lib\\""\nfi\n\neval "docker run -it -p 8888:8888 -p 8080:8080 $ARGS registry.gitlab.com/nachawati/unity/docker:0.0.1-SNAPSHOT $@"\n')),(0,o.kt)("ol",{start:2},(0,o.kt)("li",{parentName:"ol"},"Make executable")),(0,o.kt)("pre",null,(0,o.kt)("code",{parentName:"pre",className:"language-bash"},"chmod +x /usr/local/bin/unity\n")),(0,o.kt)("h2",{id:"for-windows-with-docker-toolbox"},"For Windows with Docker Toolbox"),(0,o.kt)("ol",null,(0,o.kt)("li",{parentName:"ol"},"Save the following script to ",(0,o.kt)("inlineCode",{parentName:"li"},"C:\\Windows\\System32\\unity.cmd"))),(0,o.kt)("admonition",{title:"NOTE",type:"info"},(0,o.kt)("p",{parentName:"admonition"},"This script is limited to the C:\\ drive. If your computer has more than one drive,\nmake sure that the settings, workspace and packages folders are located under the C:\\\ndrive.")),(0,o.kt)("pre",null,(0,o.kt)("code",{parentName:"pre",className:"language-bash"},'@ECHO OFF\n@SETLOCAL\n\nIF "%UNITY_SETTINGS%"=="" SET UNITY_SETTINGS=%HOMEDRIVE%%HOMEPATH%/.unity\nIF NOT EXIST "%UNITY_SETTINGS%\\" MKDIR "%UNITY_SETTINGS%"\nIF "%UNITY_WORKSPACE%"=="" SET UNITY_WORKSPACE=%cd%\n\nSET ARGS=-v "/c%UNITY_SETTINGS:~2%:/root/.unity" -v "/c%UNITY_WORKSPACE:~2%:/root/workspace"\n\nIF NOT "%UNITY_PACKAGES%"=="" SET ARGS=%ARGS% -v "/c%UNITY_PACKAGES:~2%:/root/packages"\n\nIF NOT "%UNITY_BINPATH%"=="" SET ARGS=%ARGS% -v "/c%UNITY_BINPATH:~2%:/root/packages"\n\nIF NOT "%UNITY_LIBPATH%"=="" SET ARGS=%ARGS% -v "/c%UNITY_LIBPATH:~2%:/root/bin"\n\nIF NOT "%UNITY_LIBPATH%"=="" SET ARGS=%ARGS% -v "/c%UNITY_LIBPATH:~2%:/root/lib"\n\ndocker run -it -p 8888:8888 -p 8080:8080 %ARGS:\\=/% registry.gitlab.com/nachawati/unity/docker:0.0.1-SNAPSHOT %*\n')),(0,o.kt)("h2",{id:"for-windows-with-docker-for-windows"},"For Windows with Docker for Windows"),(0,o.kt)("ol",null,(0,o.kt)("li",{parentName:"ol"},"Save the following script to ",(0,o.kt)("inlineCode",{parentName:"li"},"C:\\Windows\\System32\\unity.cmd"))),(0,o.kt)("pre",null,(0,o.kt)("code",{parentName:"pre",className:"language-bash"},'@ECHO OFF\n@SETLOCAL\n\nIF "%UNITY_SETTINGS%"=="" SET UNITY_SETTINGS=%HOMEDRIVE%%HOMEPATH%/.unity\nIF NOT EXIST "%UNITY_SETTINGS%\\" MKDIR "%UNITY_SETTINGS%"\nIF "%UNITY_WORKSPACE%"=="" SET UNITY_WORKSPACE=%cd%\n\nSET ARGS=-v "%UNITY_SETTINGS:/root/.unity" -v "%UNITY_WORKSPACE%:/root/workspace"\n\nIF NOT "%UNITY_PACKAGES%"=="" SET ARGS=%ARGS% -v "%UNITY_PACKAGES%:/root/packages"\n\nIF NOT "%UNITY_BINPATH%"=="" SET ARGS=%ARGS% -v "%UNITY_BINPATH%:/root/packages"\n\nIF NOT "%UNITY_LIBPATH%"=="" SET ARGS=%ARGS% -v "%UNITY_LIBPATH%:/root/bin"\n\nIF NOT "%UNITY_LIBPATH%"=="" SET ARGS=%ARGS% -v "%UNITY_LIBPATH%:/root/lib"\n\ndocker run -it -p 8888:8888 -p 8080:8080 %ARGS% registry.gitlab.com/nachawati/unity/docker:0.0.1-SNAPSHOT %*\n')))}p.isMDXComponent=!0}}]);