"use strict";(self.webpackChunknachawati_github_io=self.webpackChunknachawati_github_io||[]).push([[602],{3905:(t,e,n)=>{n.d(e,{Zo:()=>c,kt:()=>d});var r=n(7294);function i(t,e,n){return e in t?Object.defineProperty(t,e,{value:n,enumerable:!0,configurable:!0,writable:!0}):t[e]=n,t}function o(t,e){var n=Object.keys(t);if(Object.getOwnPropertySymbols){var r=Object.getOwnPropertySymbols(t);e&&(r=r.filter((function(e){return Object.getOwnPropertyDescriptor(t,e).enumerable}))),n.push.apply(n,r)}return n}function a(t){for(var e=1;e<arguments.length;e++){var n=null!=arguments[e]?arguments[e]:{};e%2?o(Object(n),!0).forEach((function(e){i(t,e,n[e])})):Object.getOwnPropertyDescriptors?Object.defineProperties(t,Object.getOwnPropertyDescriptors(n)):o(Object(n)).forEach((function(e){Object.defineProperty(t,e,Object.getOwnPropertyDescriptor(n,e))}))}return t}function s(t,e){if(null==t)return{};var n,r,i=function(t,e){if(null==t)return{};var n,r,i={},o=Object.keys(t);for(r=0;r<o.length;r++)n=o[r],e.indexOf(n)>=0||(i[n]=t[n]);return i}(t,e);if(Object.getOwnPropertySymbols){var o=Object.getOwnPropertySymbols(t);for(r=0;r<o.length;r++)n=o[r],e.indexOf(n)>=0||Object.prototype.propertyIsEnumerable.call(t,n)&&(i[n]=t[n])}return i}var l=r.createContext({}),u=function(t){var e=r.useContext(l),n=e;return t&&(n="function"==typeof t?t(e):a(a({},e),t)),n},c=function(t){var e=u(t.components);return r.createElement(l.Provider,{value:e},t.children)},p="mdxType",_={inlineCode:"code",wrapper:function(t){var e=t.children;return r.createElement(r.Fragment,{},e)}},g=r.forwardRef((function(t,e){var n=t.components,i=t.mdxType,o=t.originalType,l=t.parentName,c=s(t,["components","mdxType","originalType","parentName"]),p=u(n),g=i,d=p["".concat(l,".").concat(g)]||p[g]||_[g]||o;return n?r.createElement(d,a(a({ref:e},c),{},{components:n})):r.createElement(d,a({ref:e},c))}));function d(t,e){var n=arguments,i=e&&e.mdxType;if("string"==typeof t||i){var o=n.length,a=new Array(o);a[0]=g;var s={};for(var l in e)hasOwnProperty.call(e,l)&&(s[l]=e[l]);s.originalType=t,s[p]="string"==typeof t?t:i,a[1]=s;for(var u=2;u<o;u++)a[u]=n[u];return r.createElement.apply(null,a)}return r.createElement.apply(null,n)}g.displayName="MDXCreateElement"},9404:(t,e,n)=>{n.r(e),n.d(e,{assets:()=>l,contentTitle:()=>a,default:()=>_,frontMatter:()=>o,metadata:()=>s,toc:()=>u});var r=n(7462),i=(n(7294),n(3905));const o={sidebar_position:4},a="4 - Test Installation",s={unversionedId:"getting-started-with-unity-dgms/test-installation",id:"getting-started-with-unity-dgms/test-installation",title:"4 - Test Installation",description:"Run the following command:",source:"@site/docs/getting-started-with-unity-dgms/4-test-installation.md",sourceDirName:"getting-started-with-unity-dgms",slug:"/getting-started-with-unity-dgms/test-installation",permalink:"/docs/getting-started-with-unity-dgms/test-installation",draft:!1,tags:[],version:"current",sidebarPosition:4,frontMatter:{sidebar_position:4},sidebar:"tutorialsSidebar",previous:{title:"3 - Add Unity DGMS Shell Script to PATH",permalink:"/docs/getting-started-with-unity-dgms/add-unity-dgms-shell-script-to-path"},next:{title:"5 - Run Local Query (Single File)",permalink:"/docs/getting-started-with-unity-dgms/run-local-query-single-file"}},l={},u=[],c={toc:u},p="wrapper";function _(t){let{components:e,...n}=t;return(0,i.kt)(p,(0,r.Z)({},c,n,{components:e,mdxType:"MDXLayout"}),(0,i.kt)("h1",{id:"4---test-installation"},"4 - Test Installation"),(0,i.kt)("p",null,"Run the following command:"),(0,i.kt)("pre",null,(0,i.kt)("code",{parentName:"pre",className:"language-bash"},"unity\n")),(0,i.kt)("p",null,"Expected result:"),(0,i.kt)("pre",null,(0,i.kt)("code",{parentName:"pre",className:"language-bash"},"   __  __      _ __           ____  ________  ________\n  / / / /___  (_) /___  __   / __ \\/ ____/  |/  / ___/\n / / / / __ \\/ / __/ / / /  / / / / / __/ /|_/ /\\__ \\\n/ /_/ / / / / / /_/ /_/ /  / /_/ / /_/ / /  / /___/ /\n\\____/_/ /_/_/\\__/\\__, /  /_____/\\____/_/  /_//____/\n                 /____/\n\nUsage: unity [options] [command] [command options]\n  Options:\n    -h, --help\n      Print usage and quit\n  Commands:\n    console      Start console session\n      Usage: console [options]\n        Options:\n          --help\n            Print usage and quit\n          -k, --kernel\n            Specify kernel\n            Default: zorba\n\n    notebook      Start notebook session\n      Usage: notebook [options]\n        Options:\n          --help\n            Print usage and quit\n\n    run      Execute local script or query\n      Usage: run [options] <path or expression>\n        Options:\n          --help\n            Print usage and quit\n          -e, --engine\n            <engine> : Specify analytics engine for execution\n            Default: zorba\n          -o, --output\n            <file> : Write results to <file>\n          -t, --time\n            Print execution time\n\n    settings      Manage settings\n      Usage: settings [options]\n        Options:\n          --help\n            Print usage and quit\n\n    version      Print version information and quit\n      Usage: version [options]\n        Options:\n          --help\n            Print usage and quit\n")))}_.isMDXComponent=!0}}]);